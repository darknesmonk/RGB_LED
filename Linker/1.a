;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 30.08.2015
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 2,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#define L PORTD
;#include "led.c"
;flash unsigned char pp[] = {
;0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x38,0x7,0x0,0x0,0xD7,0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xBA,0x7,0xBA,0x7,0xD7,0x6,0xBA,0x7,0x59,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0xBA,0x7,0xBA,0x7,0xBA,0x7,0xBA,0x7,0xBA,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x38,0x7,0xBA,0x7,0x38,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xBA,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0xD0,0x0,0x0,0x1E,0xD0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0xD0,0x1E,0xD0,0x1C,0xC0,0x1E,0xD0,0x1E,0xD0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0xD0,0x1E,0xD0,0x1E,0xD0,0x1E,0xD0,0x1E,0xD0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1C,0xC0,0x1E,0xD0,0x1C,0xC0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0xD0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x80,0xF6,0x0,0x0,0x80,0xF6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x80,0xF6,0x80,0xF6,0x80,0xF6,0x80,0xF6,0x80,0xF6,0x0,0x0,0x0,0x0,0x0,0x0,0x80,0xF6,0x80,0xF6,0x80,0xF6,0x80,0xF6,0x80,0xF6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xE6,0x80,0xF6,0x0,0xE6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x80,0xF6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xC8,0x6,0x0,0x0,0x28,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x49,0x7,0x0,0x0,0xC8,0x6,0x0,0x0,0xA9,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0xA9,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0xA9,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x28,0x7,0x0,0x0,0x28,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xA9,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x48,0x0,0x0,0x1E,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x48,0x0,0x0,0x1C,0x40,0x0,0x0,0x1E,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1C,0x40,0x0,0x0,0x1C,0x40,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0xF2,0x0,0x0,0x60,0xF2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0xF2,0x0,0x0,0x20,0xE2,0x0,0x0,0x60,0xF2,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0xF2,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0xF2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0xE2,0x0,0x0,0x20,0xE2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0xF2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
;}; // 6 heart
;flash unsigned char pp2[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x49,0x4A,0x4,0x21,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x92,0x94,0x8,0x42,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x92,0x94,0xFF,0xFF,0x1C,0xE7,0x1C,0xE7,0x1C,0xE7,0xFF,0xFF,0xCF,0x7B,0x0,0x0,0x92,0x94,0xFB,0xDE,0x14,0xA5,0x55,0xAD,0x55,0xAD,0x38,0xC6,0xCB,0x5A,0x0,0x0,0x71,0x8C,0x8,0x42,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x49,0x4A,0xE7,0x39,0x82,0x10,0xC3,0x18,0xC3,0x18,0xE3,0x18,0x82,0x10,0x0,0x0,0x30,0x84,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x51,0x8C,0x0,0x0,0x24,0x21,0xA6,0x31,0x86,0x31,0xC7,0x39,0x4,0x21,0xC7,0x39,0x24,0x21,0x0,0x0,0x0,0x0,0x14,0xA5,0x2C,0x63,0xE7,0x39,0x18,0xC6,0x30,0x84,0x0,0x0,0x0,0x0,0xEF,0x7B,0xFF,0xFF,0xBA,0xD6,0xBA,0xD6,0xDB,0xDE,0xFF,0xFF,0x8E,0x73,0x0,0x0,0x71,0x8C,0x4,0x21,0x69,0x4A,0x71,0x8C,0x0,0x0,0x69,0x4A,0x51,0x8C,0x0,0x0,0x71,0x8C,0x4,0x21,0x49,0x4A,0x71,0x8C,0x0,0x0,0x49,0x4A,0x30,0x84,0x0,0x0,0xD3,0x9C,0xFF,0xFF,0xFF,0xFF,0x9E,0xF7,0x9E,0xF7,0xFF,0xFF,0x51,0x8C,0x0,0x0,0xA6,0x31,0x30,0x84,0x4D,0x6B,0x6D,0x6B,0x10,0x84,0x10,0x84,0x86,0x31,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2C,0x63,0x8,0x42,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x92,0x94,0xEB,0x5A,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x82,0x10,0x0,0x0,0x8,0x42,0xE7,0x39,0x0,0x0,0x0,0x0,0x0,0x0,0xC7,0x39,0xFF,0xFF,0x9A,0xD6,0xB2,0x94,0xFF,0xFF,0xFF,0xFF,0x86,0x31,0x0,0x0,0xB2,0x94,0x2C,0x63,0xEF,0x7B,0x96,0xB5,0x61,0x8,0x51,0x8C,0x71,0x8C,0x0,0x0,0x92,0x94,0x92,0x94,0xD3,0x9C,0x18,0xC6,0x49,0x4A,0x75,0xAD,0x31,0x84,0x0,0x0,0x4,0x21,0x5D,0xEF,0x55,0xAD,0xEF,0x7B,0xFF,0xFF,0x7A,0xD6,0xE3,0x18,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x20,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x30,0x61,0xD0,0x21,0xE0,0x41,0xB8,0x21,0x10,0x0,0x0,0x0,0x0,0x21,0x28,0x20,0xE0,0x0,0xF8,0x0,0xF8,0x20,0xF8,0x41,0xB8,0x21,0x18,0x0,0x0,0x22,0x38,0x41,0xF0,0x0,0xE8,0x0,0xE0,0x20,0xE0,0x20,0xF8,0x42,0xC0,0x20,0x10,0x21,0x0,0x41,0x58,0x40,0xE0,0x0,0xE8,0x0,0xE0,0x0,0xE8,0x0,0xF8,0x62,0xB8,0x21,0x20,0x40,0xB0,0x0,0xE8,0x0,0xE0,0x0,0xE0,0x0,0xF0,0x41,0xF0,0x41,0x60,0x21,0x40,0x21,0xF8,0x0,0xF0,0x0,0xE0,0x0,0xF0,0x21,0xF8,0x42,0x60,0x0,0x0,0x20,0x0,0x41,0x80,0x41,0xF8,0x0,0xF8,0x21,0xF0,0x41,0x58,0x20,0x0,0x0,0x0,0x0,0x0,0x20,0x8,0x21,0x50,0x1,0x58,0x21,0x40,0x20,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x61,0x8,0xC2,0x18,0xA2,0x10,0xA2,0x10,0xA2,0x10,0xA2,0x10,0xA2,0x10,0x0,0x0,0xD3,0x9C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFB,0xDE,0x0,0x0,0xE7,0x39,0xCF,0x7B,0x4D,0x6B,0x4D,0x6B,0x4D,0x6B,0x8E,0x73,0xCB,0x5A,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // i love 8 bit
;flash unsigned char pp3[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x0,0x10,0x0,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x10,0x0,0x30,0x0,0x50,0x0,0x48,0x0,0x20,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x30,0x0,0x78,0x0,0xA8,0x0,0x98,0x0,0x58,0x0,0x18,0x0,0x0,0x0,0x0,0x0,0x48,0x0,0xA8,0x0,0xE0,0x21,0xD8,0x22,0x90,0x24,0x40,0x3,0x10,0x1,0x0,0x0,0x50,0x20,0xB8,0x60,0xF0,0xC2,0xF0,0xE6,0xB8,0xAA,0x70,0x49,0x30,0x3,0x10,0x0,0x48,0x40,0xA8,0x20,0xE1,0x42,0xF2,0xA8,0xD2,0xCE,0xA1,0xAE,0x60,0x26,0x20,0x20,0x38,0xC0,0x90,0x40,0xD2,0x1,0xF4,0x65,0xEC,0x4B,0xC3,0x6D,0x79,0x47,0x28,0x60,0x30,0xC0,0x89,0xA0,0xD3,0x40,0xF5,0xA2,0xF5,0x66,0xC4,0x28,0x72,0x64,0x20,0x0,0x31,0x41,0x8B,0x22,0xCD,0xE3,0xDD,0x5,0xCE,0x27,0x9D,0x6,0x4B,0xE2,0x10,0x81,0x29,0x23,0x7C,0xC7,0xA5,0xC,0x9E,0xE,0x7E,0xED,0x55,0x9,0x24,0x83,0x9,0x42,0x19,0xC8,0x4B,0x70,0x5D,0x97,0x45,0xB8,0x2D,0xD4,0x1D,0x4C,0xC,0xC4,0x1,0xE3,0x8,0xEC,0x1A,0xB7,0x24,0x1D,0x15,0x1C,0xD,0xB5,0x4,0x2B,0x3,0x23,0x1,0x83,0x0,0x2D,0x2,0xF8,0x3,0x9D,0x4,0x39,0x4,0xF0,0x2,0x66,0x1,0x61,0x0,0x42,0x0,0x48,0x1,0xB1,0x2,0x55,0x3,0xD2,0x2,0x69,0x1,0x62,0x0,0x0,0x0,0x20,0x0,0x83,0x0,0x48,0x1,0xAA,0x1,0x48,0x1,0x83,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x0,0x42,0x0,0x62,0x0,0x42,0x0,0x20,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // RGB
;flash unsigned char pp4[] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x60,0xC8,0x60,0xC8,0x63,0xF4,0x0,0x0,0x0,0x0,0xFF,0xFF,0x0,0x0,0x60,0xC8,0x63,0xF4,0x63,0xF4,0x63,0xF4,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x60,0xC8,0x63,0xF4,0x60,0xC8,0x60,0xC8,0x60,0xC8,0x0,0x0,0xFF,0xFF,0x0,0x0,0x63,0xF4,0x63,0xF4,0x60,0xC8,0x60,0xC8,0x60,0xC8,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x60,0xC8,0x63,0xF4,0x60,0xC8,0x60,0xC8,0x60,0xC8,0x0,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0,0x60,0xC8,0x63,0xF4,0x63,0xF4,0x63,0xF4,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0xFF,0xFF,0x0,0x0,0x60,0xC8,0x60,0xC8,0x63,0xF4,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF}; // mushroom
;flash unsigned char pp5[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0xD,0xF8,0x0,0x0,0x0,0x0,0xD,0xF8,0xD,0xF8,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0x0,0x0,0xD,0xF8,0x0,0x0,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0xD,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // 8bit
;flash unsigned char pp6[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x21,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x24,0x6A,0x5,0x6A,0xC0,0x89,0x45,0xB3,0x45,0xBB,0xC5,0xAB,0x0,0x0,0x23,0xC3,0x4,0xB3,0xE2,0xB2,0x5,0xB3,0x4,0xB3,0x24,0xB3,0x0,0x0,0x80,0x28,0xE4,0xAA,0xA8,0x72,0x72,0x8C,0x7,0x93,0x0,0x82,0x66,0xBB,0x60,0x28,0x3,0xAB,0xC2,0xB2,0xB4,0x94,0xB7,0x2,0xB9,0xAD,0xA1,0xAA,0x44,0xBB,0x2,0xBB,0x82,0xA2,0x63,0x9A,0x67,0xB3,0x30,0x4B,0xE4,0xAA,0xE0,0x89,0x61,0x9A,0x0,0x0,0x3,0xBB,0x44,0xBB,0x23,0xBB,0x23,0xBB,0x65,0xCB,0x2,0xB3,0x43,0xB3,0x23,0xCB,0x0,0x0,0x5,0xB3,0xF2,0xAC,0x56,0xAD,0xD8,0xB5,0x25,0xA3,0x23,0xAB,0x20,0x0,0x20,0x0,0x64,0xCB,0xF8,0xBD,0xD8,0x2,0x78,0xE6,0x23,0xBB,0x65,0xC3,0x0,0x0,0x0,0x0,0x0,0x0,0x61,0x8,0x0,0x0,0xE3,0xCA,0x23,0xB3,0x3,0xBB,0x44,0xCB,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,0x1,0x0,0xA4,0x0,0x20,0x0,0x20,0x0,0x94,0x1C,0x36,0x5,0x57,0xD,0xF6,0x4,0x36,0x5,0x0,0x8,0x40,0x0,0x50,0x24,0xDB,0x15,0xB7,0x2D,0x17,0x6,0xB4,0x4,0xF6,0x4,0x20,0x0,0x1,0x10,0x37,0x5,0xF7,0xD5,0x18,0xCE,0xDA,0xD6,0x78,0xD,0xB9,0xD,0x97,0x5,0x1B,0xE,0xF2,0x3,0xF0,0x4,0xD6,0xA,0x3A,0x15,0x57,0x5,0x99,0x1D,0x20,0x0,0xD9,0xD,0xB8,0x5,0xFA,0xD,0x58,0xD,0x36,0x5,0xF5,0x4,0x78,0x5,0xD9,0x5,0x20,0x0,0x37,0x5,0xF8,0x5,0x9A,0xD6,0x14,0x4D,0x36,0xD,0x16,0x5,0x20,0x8,0x20,0x8,0x2D,0x3,0x36,0xC6,0xF7,0x12,0xB7,0x7C,0xB8,0xD,0xB8,0x25,0x20,0x0,0x41,0x8,0x20,0x0,0xC8,0x9,0x1,0x0,0x58,0x5,0xD8,0x5,0xD9,0x5,0x16,0x1D,0x41,0x8,0x41,0x8,0x20,0x0,0x20,0x0,0x85,0x28,0xAB,0x58,0xB7,0xB2,0x99,0xCA,0x41,0x8,0x21,0x8,0x75,0xBA,0x99,0xCA,0x98,0xD2,0x79,0xCA,0x92,0x99,0x20,0x0,0x41,0x8,0x86,0x30,0x79,0xCA,0xF9,0xD5,0xF8,0xCB,0x59,0xD2,0x79,0xCA,0xF1,0x91,0x82,0x10,0xBB,0xDA,0x3B,0xE7,0xD0,0x3A,0x96,0x1B,0x38,0xC2,0x7A,0xDA,0xCF,0x71,0x46,0x30,0x9A,0xD2,0xFC,0xE2,0x56,0x72,0x78,0xC2,0x78,0xC2,0xD7,0xC2,0xCC,0x61,0x41,0x0,0xDA,0xD2,0x7D,0xEA,0x79,0xCB,0x1A,0xD4,0x58,0xC2,0xB9,0xD2,0x14,0x9B,0x41,0x8,0xBA,0xD2,0x9D,0xE6,0x9C,0xF7,0x8F,0x32,0x78,0xBA,0x18,0xBB,0x0,0x8,0x61,0x8,0x80,0x0,0xBA,0xC2,0x58,0x44,0x37,0x7A,0x37,0xC2,0x39,0xCA,0x77,0xB3,0x61,0x8,0x61,0x8,0x41,0x8,0x41,0x8,0x1,0x20,0x0,0x48,0x41,0xB0,0x41,0xB8,0x61,0x8,0x61,0x8,0x20,0x48,0x21,0xB8,0x0,0xD0,0x0,0xC8,0x22,0xA0,0x0,0x0,0x81,0x8,0x0,0x38,0x20,0xC8,0x99,0xD6,0xD7,0xED,0x0,0xC0,0x0,0xC8,0x41,0xC0,0x62,0x10,0x1,0xE8,0x7,0x8A,0xFF,0xBE,0x59,0x1B,0x20,0xC0,0x23,0xB8,0x2,0x8,0x62,0x10,0x20,0xD0,0x20,0xC8,0x61,0xC8,0x20,0xD8,0x0,0xC8,0x1,0xC8,0x81,0xB0,0x82,0x10,0x1,0xE8,0x0,0xE0,0xDA,0xD6,0xFB,0xFE,0x0,0xC8,0x0,0xD0,0x0,0x0,0x61,0x8,0x83,0xA0,0x61,0xA8,0xDC,0xCE,0xDB,0x12,0x0,0xD0,0x0,0xD8,0x42,0x81,0x82,0x10,0x61,0x8,0x0,0x8,0x1,0x0,0x61,0x80,0x40,0x0,0x0,0x0,0x0,0x0}; // ïðèçðàêè
;flash unsigned char pp7[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x7,0x20,0x7,0x20,0x7,0x0,0x0,0xE4,0xFE,0xE4,0xFE,0xE4,0xFE,0x0,0x0,0x20,0x7,0x20,0x7,0x20,0x7,0x0,0x0,0xE4,0xFE,0xE4,0xFE,0xE4,0xFE,0x0,0x0,0x20,0x7,0x20,0x7,0x20,0x7,0x0,0x0,0xE4,0xFE,0xE4,0xFE,0xE4,0xFE,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xF8,0x0,0xF8,0x0,0xF8,0x0,0x0,0x1C,0x43,0x1C,0x43,0x1C,0x43,0x0,0x0,0x0,0xF8,0x0,0xF8,0x0,0xF8,0x0,0x0,0x1C,0x43,0x1C,0x43,0x1C,0x43,0x0,0x0,0x0,0xF8,0x0,0xF8,0x0,0xF8,0x0,0x0,0x1C,0x43,0x1C,0x43,0x1C,0x43,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // windows
; flash unsigned char pp8[] = {
; 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2C,0x2,0x15,0x2C,0xD4,0x2B,0xC4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x4E,0x2,0x38,0x4,0xB9,0x14,0x3A,0x35,0x18,0x4D,0x82,0x0,0x0,0x0,0x0,0x0,0xD6,0x3,0x99,0xC,0xFA,0x24,0x7B,0x4D,0xDC,0x5D,0x13,0x44,0x0,0x0,0x0,0x0,0xF1,0x2,0xB9,0x14,0x3A,0x35,0xBC,0x5D,0x3D,0x6E,0x3D,0x76,0x6B,0x22,0x0,0x0,0x42,0x0,0x73,0xB,0x1A,0x35,0xBB,0x55,0x1D,0x66,0xFC,0x65,0x7B,0x4D,0x2B,0x12,0x6,0x1,0x37,0xC,0xFA,0x1C,0x5B,0x3D,0x7B,0x4D,0x7B,0x4D,0x98,0x2C,0xC4,0x0,0x74,0x1B,0x18,0x4,0x99,0xC,0xDA,0x1C,0xFA,0x24,0xDA,0x24,0xE5,0x0,0x0,0x0,0x16,0x44,0xF7,0x13,0x17,0x4,0x58,0x4,0x79,0xC,0x4D,0x2,0x0,0x0,0x0,0x0,0x68,0x1,0x58,0x4C,0xD7,0x1B,0xD7,0x3,0xD1,0x2,0x20,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x42,0x8,0x27,0x19,0xE6,0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x22,0x18,0xAD,0xA9,0x34,0xE3,0x93,0xD3,0x47,0x51,0x0,0x0,0x0,0x0,0x0,0x0,0x8E,0xB1,0xF3,0xEA,0x94,0xEB,0xF5,0xEB,0xB7,0xEC,0x5,0x39,0x0,0x0,0x0,0x0,0x31,0xDA,0x54,0xEB,0xF5,0xEB,0x76,0xEC,0xD7,0xEC,0x54,0xCC,0x21,0x8,0x0,0x0,0x49,0x79,0x74,0xEB,0x15,0xEC,0xB7,0xEC,0x38,0xED,0x18,0xED,0x2F,0xA3,0x0,0x0,0x0,0x0,0x2D,0x9A,0xF5,0xEB,0x76,0xEC,0xD7,0xEC,0xB7,0xEC,0x56,0xEC,0xC,0x82,0x9,0x71,0xF3,0xEA,0x94,0xEB,0x15,0xEC,0x36,0xEC,0x36,0xEC,0xCF,0xAA,0x20,0x0,0x53,0xE2,0x52,0xEA,0xF3,0xEA,0x74,0xEB,0x94,0xEB,0x32,0xD3,0x21,0x10,0x0,0x0,0x31,0xCA,0x33,0xEA,0x12,0xEA,0x93,0xEA,0xB3,0xEA,0xE6,0x48,0x0,0x0,0x0,0x0,0x23,0x20,0xF0,0xB9,0xF3,0xE9,0x51,0xD9,0xA7,0x60,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x40,0x18,0x24,0x81,0xE7,0xB1,0x8,0xB2,0x82,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x44,0x81,0x65,0xA9,0x45,0xB9,0x85,0xC1,0x69,0xD2,0x81,0x38,0x0,0x0,0x0,0x0,0x65,0x99,0x45,0xB1,0x85,0xC1,0xA5,0xD1,0xA5,0xD9,0xE6,0xC1,0x0,0x8,0x0,0x0,0xA2,0x50,0x45,0xB1,0x85,0xC9,0xA5,0xD9,0x85,0xE1,0xA6,0xE1,0x44,0x99,0x0,0x0,0x0,0x0,0xE4,0x78,0x65,0xC1,0xA5,0xD1,0xA5,0xD9,0xA5,0xD9,0xA5,0xC9,0xC3,0x68,0xE2,0x50,0x65,0xA9,0x45,0xB9,0x85,0xC1,0xA5,0xC9,0x85,0xC9,0xE4,0x80,0x0,0x0,0x48,0xA2,0xA5,0xA1,0x65,0xA9,0x45,0xB1,0x45,0xB9,0x25,0xA1,0x0,0x8,0x0,0x0,0x28,0x8A,0x48,0xA2,0xA5,0xA1,0x85,0xA1,0x85,0xA9,0x61,0x30,0x0,0x0,0x0,0x0,0x20,0x10,0xC6,0x79,0xE7,0x99,0x64,0x89,0xA1,0x38,0x0,0x0,0x0,0x0,0x0,0x0}; //3 ñåðäöà
;  flash unsigned char pp9[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2,0xE8,0x0,0xD0,0x0,0xD8,0x0,0xD8,0x2,0xE8,0x21,0xE0,0x0,0x0,0x0,0x0,0x40,0x6B,0x40,0x73,0x60,0xFD,0x40,0xFD,0x41,0xFD,0x0,0x0,0x0,0x0,0x0,0x0,0x40,0xFD,0x20,0x6B,0x40,0xFD,0x60,0xFD,0x20,0x73,0x40,0xFD,0x80,0xF5,0x0,0x0,0x0,0x0,0x40,0xFD,0x60,0xF5,0x40,0xF5,0x20,0x6B,0x20,0x6B,0x0,0x0,0x0,0x0,0x40,0x6B,0x40,0x73,0xA0,0x63,0x60,0x73,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x40,0x6B,0x20,0x73,0x0,0x73,0x0,0x73,0x80,0x5B,0x20,0x73,0x0,0x0,0x21,0xFD,0x40,0x6B,0x40,0xE0,0x0,0xD8,0x40,0xD0,0x20,0xD0,0x40,0x73,0x21,0xFD,0x60,0xFD,0x60,0xFD,0x0,0xD8,0x0,0xD8,0x0,0xD8,0x0,0xD8,0x80,0xFD,0x60,0xFD,0x0,0x0,0x0,0xD0,0x0,0xD8,0x0,0x0,0x0,0x0,0x0,0xD8,0x2,0xD0,0x0,0x0,0x0,0x0,0x40,0x6B,0x40,0x63,0x0,0x0,0x0,0x0,0x60,0x6B,0x40,0x6B,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; //   ìàðèî
;  flash unsigned char pp10[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x8,0xC3,0x80,0xA2,0x88,0x20,0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xC3,0x80,0x24,0xF9,0xC3,0xF8,0xE3,0xB0,0x20,0x10,0x0,0x0,0x0,0x0,0x20,0x8,0xC3,0xA8,0xC2,0xF0,0x82,0xD0,0xC3,0xF0,0x82,0x80,0x0,0x0,0xC0,0x3B,0x61,0x53,0x83,0xB0,0x62,0xF0,0x82,0xD8,0x82,0xD0,0x82,0xB8,0xE0,0x32,0xE0,0x97,0x0,0x44,0x42,0xB0,0x62,0xF0,0x82,0xE0,0x82,0xD0,0x82,0xB8,0xA0,0x6E,0xE0,0x9F,0x20,0x12,0x3,0x98,0xA2,0xF8,0x82,0xE0,0x61,0xD8,0x82,0xC0,0xE1,0x54,0xE0,0x43,0x40,0x0,0x83,0xA8,0x82,0xF8,0x61,0xE0,0x82,0xF8,0x61,0x78,0x0,0x0,0x0,0x0,0x0,0x0,0x82,0x70,0xE3,0xF8,0x82,0xF8,0x82,0xB0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x41,0x68,0x41,0x70,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // ÿáëîêî
;  flash unsigned char pp11[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xE4,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x46,0x69,0xEA,0xC1,0xB,0xDA,0xC9,0xA1,0xA2,0x30,0x0,0x0,0x0,0x0,0x68,0x91,0x6C,0xE2,0x2C,0xEA,0x2C,0xEA,0x6C,0xEA,0x2B,0xDA,0x0,0x0,0x82,0x28,0xEA,0xC9,0x8D,0xEA,0x2C,0xEA,0x2C,0xEA,0x4C,0xEA,0x6C,0xF2,0x46,0x71,0xE4,0x50,0xAB,0x61,0x2D,0x62,0x4C,0xEA,0x2C,0xEA,0xC,0x82,0x2D,0x62,0xC9,0xA9,0xE5,0x50,0x6A,0x39,0xED,0x31,0xC,0xAA,0xB,0xBA,0xED,0x31,0xED,0x39,0xC9,0xA1,0x27,0x51,0x8B,0x29,0xAC,0x29,0x6A,0x59,0x8A,0x69,0xAC,0x29,0xCC,0x31,0xC,0xA2,0xE6,0x48,0xAC,0x29,0xFF,0xFF,0x4A,0x39,0x49,0x49,0xFF,0xFF,0xAC,0x29,0x2C,0x92,0xA3,0x38,0xAC,0x31,0xAC,0x29,0x8A,0x69,0xB,0xA2,0xAC,0x29,0xCD,0x31,0x47,0x61,0x82,0x28,0xAB,0x61,0xCC,0x39,0xCA,0xA9,0xB,0xD2,0xED,0x49,0xD,0x5A,0x25,0x61,0x0,0x0,0x68,0x81,0x4C,0xCA,0x2C,0xEA,0x2C,0xEA,0x4C,0xE2,0x2B,0xCA,0x0,0x0,0x0,0x0,0x0,0x0,0x88,0x81,0xEA,0xC9,0x2C,0xEA,0x4C,0xD2,0xA2,0x30,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xA3,0x38,0xE4,0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // ÷åë-ïàóê
;  flash unsigned char pp12[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x40,0xFF,0xE0,0xFF,0xE0,0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0xF4,0x60,0xFD,0x0,0x0,0x0,0x0,0x0,0x0,0x40,0xF8,0x0,0x0,0xE0,0xF9,0xE0,0xFA,0x20,0xFC,0x40,0xFD,0x40,0xFE,0x0,0x0,0x0,0x8,0x0,0xF8,0xA0,0xF8,0x0,0x0,0x60,0xFA,0xA0,0xFB,0x20,0x0,0xC0,0xFD,0x0,0x0,0x20,0x0,0x0,0xF8,0x60,0xF8,0x20,0xF9,0x20,0xFA,0x0,0x0,0x60,0xFC,0x0,0x0,0x0,0x0,0x2,0xD8,0x1,0xF8,0x20,0xF8,0xE0,0xF8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6,0xB0,0x4,0xD0,0x1,0xE8,0x0,0xF8,0x0,0x0,0x60,0xF9,0x0,0x0,0xE,0x60,0xB,0x80,0x0,0x0,0x4,0xC8,0x2,0xE0,0x0,0x0,0x40,0xF8,0x14,0x18,0x0,0x0,0xF,0x50,0xC,0x78,0x8,0x98,0x5,0xB8,0x3,0xD8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x10,0x48,0xD,0x68,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x11,0x38,0xE,0x58,0xB,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // ìóòàíò
;  flash unsigned char pp13[] = {
; 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x40,0x31,0xC1,0x6A,0xC1,0x6A,0x20,0x29,0x0,0x0,0x0,0x0,0x0,0x0,0xE3,0x80,0x2,0xF5,0x81,0xFE,0x81,0xFE,0x22,0xF6,0x42,0x83,0x0,0x0,0x23,0x69,0x65,0xE1,0xE2,0xEC,0xA5,0xFE,0xA5,0xFE,0x81,0xFE,0x22,0xF6,0x42,0x62,0x47,0xCA,0xC6,0xE1,0xE,0xDD,0xFA,0x6C,0x58,0x4C,0xCC,0xAD,0x42,0xE6,0x83,0xBC,0xA,0xE3,0x7,0xE2,0xF6,0xB4,0xBA,0x5C,0xF7,0x33,0xD3,0x5C,0x88,0x55,0xE6,0x8C,0x88,0xCA,0xE7,0xE1,0x6E,0xD3,0xD9,0x64,0x58,0x4C,0xAF,0x6D,0xA9,0x4D,0xE7,0x3B,0x43,0x69,0xA6,0xE1,0x4,0xD9,0xE8,0xB2,0xAB,0x6D,0xC9,0x4D,0x68,0x4D,0x3,0x22,0x0,0x0,0x3,0x79,0x7,0x7C,0xA9,0x4D,0xA9,0x4D,0x69,0x4D,0xC4,0x2A,0x0,0x0,0x0,0x0,0x0,0x0,0x21,0x11,0x63,0x22,0x43,0x22,0x1,0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}; // cgrome
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <sleep.h>
;#define ALL 13 + 1
;
;  volatile unsigned char count=0,step=0,sr=0;
;  unsigned char rgb[38][3][8] = {0};
;  eeprom unsigned char type;
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026 // Place your code here
; 0000 0027 
; 0000 0028 
; 0000 0029 }
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 002D {
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002E 
; 0000 002F     #asm("cli")
;PCODE: $00000014 VOL: 0
	cli
;PCODE: $00000015 VOL: 0
; 0000 0030         if(count>8) count=0;
;PCODE: $00000016 VOL: 1
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 1
; 0000 0031     OCR2=rgb[step][0][count];      //RED
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 1
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 1
;PCODE: $00000021 VOL: 1
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0032     OCR1A=rgb[step][1][count];     // GREEN
;PCODE: $00000026 VOL: 1
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 1
;PCODE: $0000002C VOL: 1
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0033     OCR1B=rgb[step][2][count];     //BLUE
;PCODE: $00000032 VOL: 1
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 1
;PCODE: $00000038 VOL: 1
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0034      L = (1<<count++);
;PCODE: $0000003E VOL: 1
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 1
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0035        #asm("sei")
;PCODE: $00000045 VOL: 0
	sei
;PCODE: $00000046 VOL: 0
; 0000 0036 
; 0000 0037 }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 003A {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 003B  TCNT0=180;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003C step=(step>=sr)?0:(step+1);
;PCODE: $0000004E VOL: 1
;PCODE: $0000004F VOL: 1
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 1
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 1
; 0000 003D 
; 0000 003E }
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;
;// Declare your global variables here
;void sleep()
; 0000 0042 {
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0043 //unsigned char x;
; 0000 0044 //x = (MCUCR & ~(1 << BODSE)) | (1 << BODS); // ïîäãîòîâêà áèò
; 0000 0045 //MCUCR = x | (1 << BODSE); // ïðîöåäóðà îòêëþ÷åíèÿ BOD
; 0000 0046 //MCUCR = x;
; 0000 0047 MCUCR=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0048 #asm("cli");
;PCODE: $00000062 VOL: 0
	cli
;PCODE: $00000063 VOL: 0
; 0000 0049  sleep_enable();
;PCODE: $00000064 VOL: 0
; 0000 004A  powerdown();
;PCODE: $00000065 VOL: 0
; 0000 004B }
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;void conv(flash unsigned char *pic,unsigned int so )
; 0000 004D {
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004E unsigned int ii=0,c;
; 0000 004F unsigned char i,j;
; 0000 0050 register unsigned char r=0,g=0,b=0;
; 0000 0051 sr=so/16;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;	*pic -> Y+11
;	so -> Y+9
;	ii -> R16,R17
;	c -> R18,R19
;	i -> R21
;	j -> R20
;	r -> Y+8
;	g -> Y+7
;	b -> Y+6
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 1
; 0000 0052 
; 0000 0053 for (j=0;j<=sr; j++)
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 1
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0054 {
; 0000 0055 for(i=0; i<8 ; i++)
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0056 {   if(ii>=so) ii=0;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0057  c=pic[ii++]|(pic[ii++]<<8);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0058 
; 0000 0059  r=(0xF800 & c)>>11;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 005A  g=(0x07E0 & c) >>5;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 005B  b=(0x001F & c);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 005C 
; 0000 005D  rgb[j][0][i] =(float)r/31 * 110;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 005E  rgb[j][1][i] =(float)g/63  * 130;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 005F  rgb[j][2][i] = (float)b/31 * 130;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0060 
; 0000 0061 }
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0062 }
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0063 }
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;void main(void)
; 0000 0065 {
;PCODE: $000000F2 VOL: 0
; 0000 0066 unsigned char i=0;
; 0000 0067     #asm("cli")
;	i -> R17
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
	cli
;PCODE: $000000F6 VOL: 0
; 0000 0068 // Declare your local variables here
; 0000 0069 
; 0000 006A // Input/Output Ports initialization
; 0000 006B // Port B initialization
; 0000 006C // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
; 0000 006D // State7=T State6=T State5=T State4=T State3=0 State2=0 State1=0 State0=T
; 0000 006E PORTB=0x00;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 006F DDRB=0x0E;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0070 
; 0000 0071 // Port C initialization
; 0000 0072 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0073 // State6=P State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0074 PORTC=0x40;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0075 DDRC=0x00;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0076 
; 0000 0077 // Port D initialization
; 0000 0078 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0079 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 007A PORTD=0x00;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 007B DDRD=0xFF;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 007C 
; 0000 007D 
; 0000 007E 
; 0000 007F 
; 0000 0080 // Timer/Counter 0 initialization
; 0000 0081 // Clock source: System Clock
; 0000 0082 // Clock value: 250,000 kHz
; 0000 0083 TCCR0=0x03;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0084 TCNT0=180;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0085 
; 0000 0086 // Timer/Counter 1 initialization
; 0000 0087 // Clock source: System Clock
; 0000 0088 // Clock value: 2000,000 kHz
; 0000 0089 // Mode: Fast PWM top=0x00FF
; 0000 008A // OC1A output: Non-Inv.
; 0000 008B // OC1B output: Non-Inv.
; 0000 008C // Noise Canceler: Off
; 0000 008D // Input Capture on Falling Edge
; 0000 008E // Timer1 Overflow Interrupt: Off
; 0000 008F // Input Capture Interrupt: Off
; 0000 0090 // Compare A Match Interrupt: Off
; 0000 0091 // Compare B Match Interrupt: Off
; 0000 0092 TCCR1A=0xF1;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0093 //TCCR1B=0x09;
; 0000 0094 TCCR1B=0x01;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0095 TCNT1H=0x00;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0096 TCNT1L=0x00;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0097 ICR1H=0x00;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0098 ICR1L=0x00;
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0099 OCR1AH=0x00;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 009A OCR1AL=0x00;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 009B OCR1BH=0x00;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 009C OCR1BL=0x00;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 009D 
; 0000 009E // Timer/Counter 2 initialization
; 0000 009F // Clock source: System Clock
; 0000 00A0 // Clock value: 2000,000 kHz
; 0000 00A1 // Mode: Fast PWM top=0xFF
; 0000 00A2 // OC2 output: Non-Inverted PWM
; 0000 00A3 ASSR=0x00;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00A4 //TCCR2=0x79;
; 0000 00A5  TCCR2=0x71;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00A6 TCNT2=0x00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00A7 OCR2=0x00;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00A8 
; 0000 00A9 // External Interrupt(s) initialization
; 0000 00AA // INT0: Off
; 0000 00AB // INT1: Off
; 0000 00AC MCUCR=0x00;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00AD 
; 0000 00AE // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00AF TIMSK=0x45;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00B0 
; 0000 00B1 // USART initialization
; 0000 00B2 // USART disabled
; 0000 00B3 UCSRB=0x00;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00B4 
; 0000 00B5 // Analog Comparator initialization
; 0000 00B6 // Analog Comparator: Off
; 0000 00B7 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00B8 ACSR=0x80;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00B9 SFIOR=0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00BA 
; 0000 00BB // ADC initialization
; 0000 00BC // ADC disabled
; 0000 00BD ADCSRA=0x00;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00BE 
; 0000 00BF // SPI initialization
; 0000 00C0 // SPI disabled
; 0000 00C1 SPCR=0x00;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00C2 
; 0000 00C3 // TWI initialization
; 0000 00C4 // TWI disabled
; 0000 00C5 TWCR=0x00;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00C6 
; 0000 00C7 // Global enable interrupts
; 0000 00C8 
; 0000 00C9 if ((MCUCSR & 1)) { MCUCSR=0;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00CA 
; 0000 00CB    OCR2=100;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00CC  for (i=0; i<8; i++) {  L   =1<<i; delay_ms(100);} OCR2=OCR1A=OCR1B=0;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00CD 
; 0000 00CE   OCR1A=100;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00CF  for (i=0; i<8; i++) {  L   =1<<i;  delay_ms(100); } OCR2=OCR1A=OCR1B=0;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00D0 
; 0000 00D1   OCR1B=100;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00D2  for (i=0; i<8; i++) {  L   =1<<i;  delay_ms(100); }   OCR2=OCR1A=OCR1B=0;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00D3   L=0;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00D4   type=0;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00D5 sleep();}
;PCODE: $0000018F VOL: 0
; 0000 00D6 
; 0000 00D7 
; 0000 00D8 if ((MCUCSR & 2))
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00D9 {
; 0000 00DA type=(type>ALL)?1:(type+1);
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00DB MCUCSR=0; if(type>=ALL) {  type=0; sleep(); }
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00DC }
;PCODE: $000001AE VOL: 0
; 0000 00DD 
; 0000 00DE 
; 0000 00DF   switch(type)
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00E0   {
; 0000 00E1   case 1:  conv(pp,sizeof(pp)); break;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00E2    case 2:  conv(pp2,sizeof(pp2)); break;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00E3     case 3: conv(pp3,sizeof(pp3)); break;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00E4      case 4:  conv(pp4,sizeof(pp4)); break;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 00E5       case 5:  conv(pp5,sizeof(pp5)); break;
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00E6        case 6:  conv(pp6,sizeof(pp6)); break;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00E7         case 7:  conv(pp7,sizeof(pp7)); break;
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00E8         case 8:  conv(pp8,sizeof(pp8)); break;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 00E9          case 9:  conv(pp9,sizeof(pp9)); break;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 00EA           case 10:  conv(pp10,sizeof(pp10)); break;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00EB            case 11:  conv(pp11,sizeof(pp11)); break;
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 00EC             case 12:  conv(pp12,sizeof(pp12)); break;
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 00ED             case 13:  conv(pp13,sizeof(pp13)); break;
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00EE   }
;PCODE: $00000227 VOL: 0
; 0000 00EF 
; 0000 00F0  #asm("sei")
;PCODE: $00000228 VOL: 0
	sei
;PCODE: $00000229 VOL: 0
; 0000 00F1   while(1){     }
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 00F2 
; 0000 00F3 
; 0000 00F4 }
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
